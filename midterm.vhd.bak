LIBRARY ieee;
USE ieee.std_logic_1164.ALL;

ENTITY datapath IS
	PORT (
		i_clock, i_left, i_right, i_gReset : IN STD_LOGIC;
		o_display : OUT STD_LOGIC_VECTOR(7 downto 0));
END datapath;

ARCHITECTURE rtl OF datapath IS

COMPONENT leftShiftRegister
	PORT (
		i_reset, i_clock, i_load, i_shift : IN STD_LOGIC;
		i_A : IN STD_LOGIC_VECTOR(7 downto 0);
		o_q : OUT STD_LOGIC_VECTOR(7 downto 0));
END COMPONENT;

COMPONENT rightShiftRegister
	PORT (
		i_reset, i_clock, i_load, i_shift : IN STD_LOGIC;
		i_A : IN STD_LOGIC_VECTOR(7 downto 0);
		o_q : OUT STD_LOGIC_VECTOR(7 downto 0));
END COMPONENT;

COMPONENT eightBit4x2MUX
	PORT (
		i_A0, i_A1, i_A2, i_A3 : 	IN 	STD_LOGIC_VECTOR(7 downto 0);
		i_sel : 			IN 	STD_LOGIC_VECTOR(1 downto 0);
		o_q : 				OUT 	STD_LOGIC_VECTOR(7 downto 0));
END COMPONENT;

COMPONENT eightBitRegister
	PORT (
		i_clock, i_reset : STD_LOGIC;
		i_A : IN STD_LOGIC_VECTOR(7 downto 0);
		i_load, i_clear : IN STD_LOGIC;
		o_q : OUT STD_LOGIC_VECTOR(7 downto 0));
END COMPONENT;

SIGNAL int_loadL, int_loadR, int_shiftL, int_shiftR : STD_LOGIC;
SIGNAL int_lmask, int_rmask : STD_LOGIC_VECTOR(7 downto 0);
SIGNAL int_lmaskORrmask : STD_LOGIC_VECTOR(7 downto 0);
SIGNAL int_sel : STD_LOGIC_VECTOR(1 downto 0);
SIGNAL int_loadDisplay, int_clearDisplay : STD_LOGIC;
SIGNAL int_mux, int_display : STD_LOGIC_VECTOR(7 downto 0);

BEGIN

LMASK: leftShiftRegister
	PORT MAP (	i_reset => i_gReset,
			i_clock => i_clock,
			i_load => int_loadL,
			i_shift => int_shiftL,
			i_A => "00000001",
			o_q => int_lmask);

RMASK: rightShiftRegister
	PORT MAP (	i_reset => i_gReset,
			i_clock => i_clock,
			i_load => int_loadR,
			i_shift => int_shiftR,
			i_A => "10000000",
			o_q => int_rmask);

mux: eightBit4x2MUX
	PORT MAP (	i_A0 => "00000000",
			i_A1 => int_lmask,
			i_A2 => int_rmask,
			i_A3 => int_lmaskORrmask,
			i_sel => int_sel,
			o_q => int_mux);

display: eightBitRegister
	PORT MAP (	i_clock => i_clock,
			i_reset => i_gReset,
			i_A => int_mux,
			i_load => int_loadDisplay,
			i_clear => int_clearDisplay,
			o_q => int_display);
			
			


		
END rtl;
